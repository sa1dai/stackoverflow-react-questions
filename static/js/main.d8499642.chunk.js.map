{"version":3,"sources":["components/Avatar/index.ts","components/Avatar/Avatar.tsx","components/QuestionList/index.ts","components/QuestionList/QuestionList.tsx","services/StackoverflowApiService.ts","components/App/index.ts","components/App/App.tsx","index.tsx"],"names":["Avatar","props","backgroundImageUrl","style","height","width","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","borderRadius","marginLeft","QuestionList","questions","Array","isArray","length","className","map","question","key","question_id","href","link","target","rel","owner","profile_image","title","StackoverflowApiService","_apiBase","getReactQuestions","a","fetch","res","ok","Error","status","json","apiQuestionsData","items","_","filter","is_answered","reputation","App","toggleSort","state","newQuestionsFirst","setState","getSortedQuestions","error","then","sortedQuestions","catch","this","onClick","orderBy","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8ZAEeA,G,cCIA,SAACC,GAA6C,IACnDC,EAAuBD,EAAvBC,mBACR,OACE,yBACEC,MAAO,CACLC,OAAQ,OACRC,MAAO,OACPC,gBAAiBJ,EACjBK,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,gBACpBC,aAAc,MACdC,WAAY,WChBLC,ECQM,SAACX,GAAmD,IAC/DY,EAAcZ,EAAdY,UACR,OAAKC,MAAMC,QAAQF,GAGM,IAArBA,EAAUG,OAEV,yBAAKC,UAAU,wBAAf,oGAOF,wBAAIA,UAAU,mBACXJ,EAAUK,KAAI,SAAAC,GACb,OACE,wBAAIF,UAAU,kBAAkBG,IAAKD,EAASE,aAC5C,uBACEC,KAAMH,EAASI,KACfN,UAAU,oBACVO,OAAO,SACPC,IAAI,uBAEJ,kBAAC,EAAD,CACEvB,mBAAkB,cAASiB,EAASO,MAAMC,cAAxB,OAEpB,yBAAKV,UAAU,yBAAyBE,EAASS,aAxBpD,M,iBCNUC,E,iDACXC,SACN,4E,KAEKC,kB,sBAAoB,gCAAAC,EAAA,sEACPC,MAAM,GAAD,OAAI,EAAKH,WADP,WACnBI,EADmB,QAEhBC,GAFgB,sBAGjB,IAAIC,MACR,uDAAkDF,EAAIG,SAJjC,uBAOwBH,EAAII,OAP5B,cAOnBC,EAPmB,OAQnB1B,EAAY0B,EAAiBC,MARV,kBAUlBC,IAAEC,OACP7B,GACA,SAAAM,GAAQ,OAAIA,EAASwB,aAAexB,EAASO,MAAMkB,YAAc,OAZ1C,6CCPdC,G,mBCWb,WAAY5C,GAAY,IAAD,8BACrB,4CAAMA,KAqCA6C,WAAa,WAAa,IAAD,EACU,EAAKC,MAAtClC,EADuB,EACvBA,UAAWmC,EADY,EACZA,kBACnB,EAAKC,SAAS,CACZpC,UAAWgC,EAAIK,mBAAmBrC,GAAYmC,GAC9CA,mBAAoBA,KAxCtB,EAAKD,MAAQ,CACXlC,UAAW,KACXsC,MAAO,KACPH,mBAAmB,GALA,E,uMAqBL,IAAInB,GAEjBE,oBACAqB,MAAK,SAAAvC,GACJ,IAAKC,MAAMC,QAAQF,GACjB,MAAM,IAAIuB,MAAM,sCAFD,IAITY,EAAsB,EAAKD,MAA3BC,kBACFK,EAAkBR,EAAIK,mBAC1BrC,EACAmC,GAEF,OAAO,EAAKC,SAAS,CAAEpC,UAAWwC,OAEnCC,OAAM,kBAAM,EAAKL,SAAS,CAAEE,MAAO,uB,gIAWZ,IAAD,EACII,KAAKR,MAA1BlC,EADiB,EACjBA,UAAWsC,EADM,EACNA,MACnB,GAAIA,EACF,OAAO,yBAAKlC,UAAU,wBAAwBkC,GAEhD,IAAKtC,EACH,OAAO,yBAAKI,UAAU,wBAAf,cANgB,IAQjB+B,EAAsBO,KAAKR,MAA3BC,kBACR,OACE,oCACE,yBAAK/B,UAAU,cACb,4BAAQA,UAAU,yBAAyBuC,QAASD,KAAKT,YACtDE,EACG,4BACA,8BAGR,kBAAC,EAAD,CAAcnC,UAAWA,Q,0CAtD7BA,EACAmC,GAEA,OAAOP,IAAEgB,QACP5C,EACA,CAAC,iBACD,CAACmC,EAAoB,OAAS,Y,GAjBlBU,IAAMC,YCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d8499642.chunk.js","sourcesContent":["import Avatar from './Avatar';\r\n\r\nexport default Avatar;\r\n","import React, { ReactElement } from 'react';\r\n\r\ninterface AvatarProps {\r\n  backgroundImageUrl: string;\r\n}\r\n\r\nconst Avatar = (props: AvatarProps): ReactElement | null => {\r\n  const { backgroundImageUrl } = props;\r\n  return (\r\n    <div\r\n      style={{\r\n        height: '35px',\r\n        width: '35px',\r\n        backgroundImage: backgroundImageUrl,\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center center',\r\n        borderRadius: '50%',\r\n        marginLeft: '5px'\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import QuestionList from './QuestionList';\r\n\r\nexport default QuestionList;\r\n","import React, { ReactElement } from 'react';\r\nimport './QuestionList.css';\r\nimport 'src/components/common.css';\r\nimport { Question } from 'src/types';\r\nimport Avatar from 'src/components/Avatar';\r\n\r\ninterface QuestionListProps {\r\n  questions: Question[];\r\n}\r\n\r\nconst QuestionList = (props: QuestionListProps): ReactElement | null => {\r\n  const { questions } = props;\r\n  if (!Array.isArray(questions)) {\r\n    return null;\r\n  }\r\n  if (questions.length === 0) {\r\n    return (\r\n      <div className=\"common-screen-center\">\r\n        There is no react questions that has an answer and the question owner\r\n        has reputation not less 50\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"QuestionList-ul\">\r\n      {questions.map(question => {\r\n        return (\r\n          <li className=\"QuestionList-li\" key={question.question_id}>\r\n            <a\r\n              href={question.link}\r\n              className=\"QuestionList-li-a\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <Avatar\r\n                backgroundImageUrl={`url(${question.owner.profile_image})`}\r\n              />\r\n              <div className=\"QuestionList-li-title\">{question.title}</div>\r\n            </a>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default QuestionList;\r\n","import _ from 'lodash';\r\nimport { Question } from 'src/types';\r\n\r\ninterface ApiQuestionsData {\r\n  items: Question[];\r\n}\r\n\r\nexport default class StackoverflowApiService {\r\n  private _apiBase =\r\n    'https://api.stackexchange.com/2.2/search?intitle=react&site=stackoverflow';\r\n\r\n  public getReactQuestions = async (): Promise<Question[]> => {\r\n    const res = await fetch(`${this._apiBase}`);\r\n    if (!res.ok) {\r\n      throw new Error(\r\n        `Could not fetch react questions` + `, received ${res.status}`\r\n      );\r\n    }\r\n    const apiQuestionsData: ApiQuestionsData = await res.json();\r\n    const questions = apiQuestionsData.items;\r\n    // фильтр вопросов согласно заданию\r\n    return _.filter(\r\n      questions,\r\n      question => question.is_answered && question.owner.reputation >= 50\r\n    );\r\n  };\r\n}\r\n","import App from './App';\r\n\r\n// теперь можно писать import App from 'src/components/App',\r\n// а не import App from 'src/components/App/App'\r\nexport default App;\r\n","import React, { ReactNode } from 'react';\r\nimport QuestionList from 'src/components/QuestionList';\r\nimport { Question } from 'src/types';\r\nimport StackoverflowApiService from 'src/services/StackoverflowApiService';\r\nimport 'src/components/common.css';\r\nimport './App.css';\r\nimport _ from 'lodash';\r\n\r\ninterface AppState {\r\n  questions: Question[] | null;\r\n  error: string | null;\r\n  newQuestionsFirst: boolean;\r\n}\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      questions: null,\r\n      error: null,\r\n      newQuestionsFirst: true\r\n    };\r\n  }\r\n\r\n  private static getSortedQuestions(\r\n    questions: Question[] | null,\r\n    newQuestionsFirst: boolean\r\n  ): Question[] {\r\n    return _.orderBy(\r\n      questions,\r\n      ['creation_date'],\r\n      [newQuestionsFirst ? 'desc' : 'asc']\r\n    );\r\n  }\r\n\r\n  async componentDidMount(): Promise<void> {\r\n    const service = new StackoverflowApiService();\r\n    service\r\n      .getReactQuestions()\r\n      .then(questions => {\r\n        if (!Array.isArray(questions)) {\r\n          throw new Error('Returned questions is not an array');\r\n        }\r\n        const { newQuestionsFirst } = this.state;\r\n        const sortedQuestions = App.getSortedQuestions(\r\n          questions,\r\n          newQuestionsFirst\r\n        );\r\n        return this.setState({ questions: sortedQuestions });\r\n      })\r\n      .catch(() => this.setState({ error: 'Error occurred!' }));\r\n  }\r\n\r\n  private toggleSort = (): void => {\r\n    const { questions, newQuestionsFirst } = this.state;\r\n    this.setState({\r\n      questions: App.getSortedQuestions(questions, !newQuestionsFirst),\r\n      newQuestionsFirst: !newQuestionsFirst\r\n    });\r\n  };\r\n\r\n  public render(): ReactNode {\r\n    const { questions, error } = this.state;\r\n    if (error) {\r\n      return <div className=\"common-screen-center\">{error}</div>;\r\n    }\r\n    if (!questions) {\r\n      return <div className=\"common-screen-center\">Loading...</div>;\r\n    }\r\n    const { newQuestionsFirst } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"App-header\">\r\n          <button className=\"App-header-sort-button\" onClick={this.toggleSort}>\r\n            {newQuestionsFirst\r\n              ? 'Sort: old questions first'\r\n              : 'Sort: new questions first'}\r\n          </button>\r\n        </div>\r\n        <QuestionList questions={questions} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// Импорт 'react-app-polyfill/ie11' для  поддержки ie 11 в create react app 3\n// Этот импорт должен идти первым в index.tsx\n// (https://github.com/facebook/create-react-app/blob/master/packages/react-app-polyfill/README.md#internet-explorer-11)\nimport 'react-app-polyfill/ie11';\n// Полифилл для старых браузеров\n// https://github.com/facebook/create-react-app/blob/master/packages/react-app-polyfill/README.md#polyfilling-other-language-features\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'src/index.css';\nimport App from 'src/components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}